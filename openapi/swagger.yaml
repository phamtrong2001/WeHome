openapi: 3.0.0
info:
  title: WeHOME
  version: 1.0.0
  description: Solve Accommodation Problems
  termsOfService: http://swagger.io/terms/
  contact:
    email: 19020024@vnu.edu.vn
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://wehome-env.eba-ujwahtza.ap-southeast-1.elasticbeanstalk.com/
  - url: http://localhost:8889
  - url: http://113.167.196.55:8889
tags:
  - name: user
  - name: room
  - name: rental
  - name: report
  - name: feedback
paths:
  /api/user:
    get:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      summary: Get all user
      operationId: user.getUsers
      parameters: [ ]
      responses:
        '401':
          description: Access token is missing or invalid
        '500':
          description: System error
        default:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/user/{userId}:
    get:
      tags:
        - user
      summary: Get user by id
      operationId: user.getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid userId supplied
          content: { }
        '404':
          description: User not found
          content: { }
        '500':
          description: System error
    put:
      tags:
        - user
      summary: Update user
      operationId: user.updateUser
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '401':
          description: Access token is missing or invalid
        '200':
          description: OK
          content: { }
        '400':
          description: Invalid userId supplied
          content: { }
        '404':
          description: User not found
          content: { }
        '500':
          description: System error
    delete:
      tags:
        - user
      summary: Delete user
      operationId: user.deleteUser
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
      responses:
        '401':
          description: Access token is missing or invalid
        '200':
          description: OK
          content: { }
        '400':
          description: Invalid userId supplied
          content: { }
        '404':
          description: User not found
          content: { }
        '500':
          description: System error
  /api/user/create:
    post:
      tags:
        - user
      summary: Create user
      operationId: user.createUser
      requestBody:
        description: Created user object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: OK
        '500':
          description: System error
  /api/user/filter:
    post:
      tags:
        - user
      summary: Filter user
      operationId: user.filterUser
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                phone:
                  type: string
                  nullable: true
                email:
                  type: string
                  nullable: true
      responses:
        '401':
          description: Access token is missing or invalid
        '500':
          description: System error
        default:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/user/{userId}/change-password:
    post:
      tags:
        - user
      summary: Change password
      operationId: user.changePassword
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                pasword:
                  type: string
      responses:
        '401':
          description: Access token is missing or invalid
        '400':
          description: Invalid userId/password supplied
        '200':
          description: OK
        '500':
          description: System error
  /api/user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      operationId: user.login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: OK
                  userId:
                    type: number
                  name:
                    type: string
                  token:
                    type: string
        '401':
          description: Invalid username/password supplied
        '500':
          description: System error
  /api/user/logout:
    post:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      summary: Logs out current logged in user session
      operationId: user.logout
      responses:
        '401':
          description: Access token is missing or invalid
        '500':
          description: System error
        default:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: OK
                  token:
                    type: string
                    default: null

  /api/room:
    get:
      tags:
        - room
      summary: Get all room
      operationId: room.getRooms
      parameters: [ ]
      responses:
        '500':
          description: System error
        default:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
  /api/room/{roomId}:
    get:
      tags:
        - room
      summary: Get room by id
      operationId: room.getRoomById
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '400':
          description: Invalid roomId supplied
          content: { }
        '404':
          description: Room not found
          content: { }
        '500':
          description: System error
    put:
      tags:
        - room
      security:
        - bearerAuth: [ ]
      summary: Update room
      operationId: room.updateRoom
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
      requestBody:
        description: Updated room object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '401':
          description: Access token is missing or invalid
        '200':
          description: OK
          content: { }
        '400':
          description: Invalid roomId supplied
          content: { }
        '404':
          description: Room not found
          content: { }
        '500':
          description: System error
    delete:
      tags:
        - room
      security:
        - bearerAuth: [ ]
      summary: Delete room
      operationId: room.deleteRoom
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
      responses:
        '401':
          description: Access token is missing or invalid
        '200':
          description: OK
          content: { }
        '400':
          description: Invalid roomId supplied
          content: { }
        '404':
          description: Room not found
          content: { }
        '500':
          description: System error
  /api/room/create:
    post:
      tags:
        - room
      security:
        - bearerAuth: [ ]
      summary: Create room
      operationId: room.createRoom
      requestBody:
        description: Created room object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '401':
          description: Access token is missing or invalid
        '500':
          description: System error
        default:
          description: OK
  /api/room/search:
    post:
      tags:
        - room
      summary: Search room by geo coordinate
      operationId: room.search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
                radius:
                  type: number
                  format: float
                  description: km
      responses:
        '500':
          description: System error
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
  /api/room/filter:
    post:
      tags:
        - room
      summary: Filter room by host ID
      operationId: room.filterRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hostId:
                  oneOf:
                    - type: string
                    - type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '404':
          description: No room
          content: { }
        '500':
          description: System error


  /api/report/create:
    get:
      tags:
        - report
      security:
        - bearerAuth: [ ]
      summary: Create report
      operationId: report.createReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: number
                description:
                  type: string
      responses:
        '401':
          description: Access token is missing or invalid
        default:
          description: OK

  /api/feedback/create:
    post:
      tags:
        - feedback
      security:
        - bearerAuth: [ ]
      summary: Create feedback
      operationId: feedback.createFeedback
      requestBody:
        description: Create feedback object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '401':
          description: Access token is missing or invalid
        '500':
          description: System error
        default:
          description: OK

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        userId:
          type: number
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        role:
          type: string
        username:
          type: string
        password:
          type: string
      example:
        user_id: 10013
        name: Trong
        phone: '19001000'
        email: abc123@gmail.com
        username: tieuphonghy01
        password: $2a$08$IeZeErqqW9ZitijjJyFi9O7LxqUt0TEliiHAsXLhWozDIg58wyIjG
        role: client

    Room:
      type: object
      properties:
        roomId:
          type: number
        name:
          type: string
        address_id:
          type: number
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        roomType:
          type: number
        hostId:
          type: number
        numGuest:
          type: integer
        numBed:
          type: integer
        numBedroom:
          type: integer
        numBathroom:
          type: integer
        rule:
          type: string
          nullable: true
        accommodationType:
          type: string
        price:
          type: number
        confirmed:
          type: boolean
          default: false
        rate:
          type: number
          format: float
          nullable: true
        image:
          type: array
          items:
            $ref: '#/components/schemas/Image'
      example:
        room_id: 102
        room_name: Family Room with balcony (Ruby Hotel Bac Ninh)
        latitude: 20.0313
        longitude: 105.863
        address_id: 6
        roomType: 2
        numGuest: 4
        numBed: 2
        numBedroom: 2
        numBathroom: 3
        rule: 'Nhận phòng: Sau 13:00;Trả phòng: 13:00;Không thú cưng;Cho phép hút thuốc'
        accommodationType: Toàn bộ nhà
        confirmed: true
        rate: 3.8
        host_id: 86
        price: 2400000
        image:
          - image_id: 1136
            room_id: 102
            url: https://a0.muscache.com/im/pictures/47c9affe-c88d-438e-bbc2-63da61d51305.jpg?im_w=720
          - image_id: 1137
            room_id: 102
            url: https://a0.muscache.com/im/pictures/98b73564-2d61-4ac8-b90d-966c07fe9695.jpg?im_w=720

    Rental:
      type: object
      properties:
        rentalId:
          type: number
        roomId:
          type: number
        beginDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        discount:
          type: number
        clientId:
          type: number
          nullable: true
    Report:
      type: object
      properties:
        userId:
          type: number
        description:
          type: string
          nullable: true
    Feedback:
      type: object
      properties:
        roomId:
          type: number
        clientId:
          type: number
        feedback:
          type: string
          nullable: true
        rate:
          type: number
          nullable: true
    Image:
      type: object
      properties:
        imageId:
          type: number
        roomId:
          type: number
        url:
          type: string
      example:
        image_id: 1136
        room_id: 102
        url: https://a0.muscache.com/im/pictures/47c9affe-c88d-438e-bbc2-63da61d51305.jpg?im_w=720

    Facility:
      type: object
      properties:
        roomId:
          type: number
        facilityId:
          type: number
        description:
          type: string
          nullable: true